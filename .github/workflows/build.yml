name: Build

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

env:
  AWS_DEFAULT_REGION: ap-southeast-2

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'nogha')"
    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_DIR: /home/runner/.cache/sccache

    strategy:
      matrix:
        version: ["postgres-14"]
        os: ["ubuntu-20.04"]

    steps:
      - uses: actions/checkout@v3

      - name: Cache cargo registry
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: build-cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock', '.github/workflows/build.yml') }}

      - name: Cache maven registry
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.m2
          key: build-maven-${{ runner.os }}-${{ hashFiles('**/pom.xml', '.github/workflows/build.yml') }}

      - name: Build base image
        run: |
          docker build -t ansilo-source \
            --file .github/workflows/docker/source.ubi9.Dockerfile \
            .

      - name: Run release build
        run: |
          docker build -t ansilo-release \
            --file .github/workflows/docker/release.ubi9.Dockerfile \
            -e CARGO_INCREMENTAL=false
            .

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ansilo-dev
          IMAGE_TAG: ${{ github.head_ref || github.ref_name }}
        run: |
          docker tag -t ansilo-release $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker tag -t ansilo-release $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest

      - name: Teardown environment
        run: .github/workflows/scripts/teardown.sh
        env:
          POSTGRES_VERSION: ${{ matrix.version }}
